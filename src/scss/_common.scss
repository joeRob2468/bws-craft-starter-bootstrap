/********************************************************************************************************
* Common Styles - used as a baseline boilerplate theme for most sites.
********************************************************************************************************/

object.svg {
  pointer-events: none;
}

/******************** Global Typography Styles ********************/
body, html {
  background: #FFFFFF;

  .is-dark h1, .is-dark h2, .is-dark h3, .is-dark h4, .is-dark h5, .is-dark h6 {
    color: #FFFFFF;
  }

  .is-dark p {
    color: #FFFFFF;
  }
}

p.is-multi-column {
  @include breakpoint(large up) {
    column-count: 2;
    column-gap: 2.8em;
    word-break: break-word;
  }
}

a {
  color: $primary-accent;
}

/******************** Common Layout Styles ********************/
img, audio, video {
  display: block;
}

img {
  width: 100%;
  height: auto;
}

img.cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

video {
  height: auto;
  width: 100%;
}

video.cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.clearfix {
  &:before, &:after {
      content: "";
      display: table;
  }

  &:after {
      clear: both;
  }
}

/******************** Container Styles ********************/

.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  // padding-right: rem-calc(get($grid-column-gutter, "small")) / 2;
  // padding-left: rem-calc(get($grid-column-gutter, "small")) / 2;

  // @include breakpoint(medium up) {
  //   padding-right: rem-calc(get($grid-column-gutter, "medium")) / 2;
  //   padding-left: rem-calc(get($grid-column-gutter, "medium")) / 2;
  // }

  max-width: get($container-widths, "standard.small");
  padding-left: get($container-gutters, "standard.small");
  padding-right: get($container-gutters, "standard.small");

  @include breakpoint(medium up) {
    max-width: get($container-widths, "standard.medium");
    padding-left: get($container-gutters, "standard.medium");
    padding-right: get($container-gutters, "standard.medium");
  }

  @include breakpoint(large up) {
    max-width: get($container-widths, "standard.large");
    padding-left: get($container-gutters, "standard.large");
    padding-right: get($container-gutters, "standard.large");
  }

  @include breakpoint(xlarge up) {
    max-width: get($container-widths, "standard.xlarge");
    padding-left: get($container-gutters, "standard.xlarge");
    padding-right: get($container-gutters, "standard.xlarge");
  }

  @include breakpoint(xxlarge up) {
    max-width: get($container-widths, "standard.xxlarge");
    padding-left: get($container-gutters, "standard.xxlarge");
    padding-right: get($container-gutters, "standard.xxlarge");
  }

  &.container--large {
    max-width: get($container-widths, "large.small");
    padding-left: get($container-gutters, "large.small");
    padding-right: get($container-gutters, "large.small");

    @include breakpoint(medium up) {
      max-width: get($container-widths, "large.medium");
      padding-left: get($container-gutters, "large.medium");
      padding-right: get($container-gutters, "large.medium");
    }

    @include breakpoint(large up) {
      max-width: get($container-widths, "large.large");
      padding-left: get($container-gutters, "large.large");
      padding-right: get($container-gutters, "large.large");
    }

    @include breakpoint(xlarge up) {
      max-width: get($container-widths, "large.xlarge");
      padding-left: get($container-gutters, "large.xlarge");
      padding-right: get($container-gutters, "large.xlarge");
    }

    @include breakpoint(xxlarge up) {
      max-width: get($container-widths, "large.xxlarge");
      padding-left: get($container-gutters, "large.xlarge");
      padding-right: get($container-gutters, "large.xlarge");
    }
  }
}

.section {
  padding-top: 0;
  padding-bottom: 0;

  &.section--small {
    padding-top: get($section-spacings, "small.small");
    padding-bottom: get($section-spacings, "small.small");

    @include breakpoint(medium up) {
      padding-top: get($section-spacings, "small.medium");
      padding-bottom: get($section-spacings, "small.medium");
    }

    @include breakpoint(large up) {
      padding-top: get($section-spacings, "small.large");
      padding-bottom: get($section-spacings, "small.large");
    }
  }

  &.section--medium {
    padding-top: get($section-spacings, "medium.small");
    padding-bottom: get($section-spacings, "medium.small");

    @include breakpoint(medium up) {
      padding-top: get($section-spacings, "medium.medium");
      padding-bottom: get($section-spacings, "medium.medium");
    }

    @include breakpoint(large up) {
      padding-top: get($section-spacings, "medium.large");
      padding-bottom: get($section-spacings, "medium.large");
    }
  }

  &.section--large {
    padding-top: get($section-spacings, "large.small");
    padding-bottom: get($section-spacings, "large.small");

    @include breakpoint(medium up) {
      padding-top: get($section-spacings, "large.medium");
      padding-bottom: get($section-spacings, "large.medium");
    }

    @include breakpoint(large up) {
      padding-top: get($section-spacings, "large.large");
      padding-bottom: get($section-spacings, "large.large");
    }
  }

  &.section--whitespace + .section--whitespace {
    padding-top: 0;
  }
}

/******************** Utility Classes ********************/

.background-container {
  position: relative;
  z-index: 1;
}

img.background, video.background {
  position: absolute;
  top: 0;
  left: 0;
  width:100%;
  height: 100%;
  z-index: -1;
  max-width: none;
  object-fit: cover;
}

.background-video-container {
  position: absolute;
  top: 0;
  left: 0;
  //padding-bottom: 56.25%;
  height: 100%;
  width: 100%;
  transition: 1s opacity ease;
  z-index: -1;
  opacity: 0;

  &.loaded {
    opacity: 1;
  }

  .background-video, .background-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    pointer-events: none;
    opacity: 0.5;
  }
}

/******************** Misc ********************/

[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
 
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
 
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
 
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
 
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
 
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
 
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
 
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.feather {
  width: rem-calc(24px);
  height: rem-calc(24px);
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: none;
}

[v-cloak] {
  display: none;
}