{"version":3,"file":"events-slider.bundle.js","sources":["webpack:///./node_modules/core-js/internals/array-method-uses-to-length.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/js/block-modules/EventsSlider.js"],"sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","import Swiper, { Navigation } from 'swiper/core';\r\n\r\nclass EventsSlider {\r\n    static selector = '.section-events_slider--block';\r\n\r\n    constructor() {\r\n        Swiper.use([Navigation]);\r\n        this.sliders = [];\r\n    }\r\n\r\n    init() {\r\n        let elements = $(EventsSlider.selector);\r\n        if (elements.length) {\r\n            elements.each((index, element) => {\r\n                let slider = new Swiper($('.swiper-container', element)[0], {\r\n                    centeredSlides: true,\r\n                    loop: false,\r\n                    initialSlide: 0,\r\n                    spaceBetween: 5,\r\n                    slidesPerView: 1.2,\r\n                    navigation: {\r\n                        nextEl: $('.swiper-navigation', element).find('.swiper-button-next')[0],\r\n                        prevEl: $('.swiper-navigation', element).find('.swiper-button-prev')[0],\r\n                    },\r\n                    breakpoints: {\r\n                        1024: {\r\n                            spaceBetween: 15,\r\n                            slidesPerView: 3,\r\n                            centeredSlides: false,\r\n                            loop: false\r\n                        }\r\n                    }\r\n                });\r\n                this.sliders.push(slider);\r\n            });\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.sliders.length) {\r\n            // destroy slider instances\r\n            for (let i = 0; i < this.sliders.length; i++) {\r\n                let slider = this.sliders[i];\r\n                slider.destroy();\r\n            }\r\n\r\n            this.sliders = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsSlider;"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAyCA;;;;;A","sourceRoot":""}