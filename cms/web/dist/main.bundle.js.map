{"version":3,"file":"main.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/js/DefaultRenderer.js","webpack:///./src/js/DefaultTransition.js","webpack:///./src/js/MainController.js","webpack:///./src/js/NavigationController.js","webpack:///./src/js/site.js","webpack:///./src/scss/style.scss"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/app.js\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* global site imports */\r\n\r\n//import 'normalize.css';\r\nimport './scss/style.scss';\r\nimport './js/site.js';","import Highway from '@dogstudio/highway';\nimport MainController from './MainController';\n\nclass DefaultRenderer extends Highway.Renderer {\n    constructor(properties) {\n        super(properties);\n        this.mainController = new MainController();\n    }\n    // Hooks/methods\n    onEnter() {\n        this.mainController.init();\n    }\n    onLeave() {\n        this.mainController.destroy();\n    }\n    onEnterCompleted() {\n        \n    }\n    onLeaveCompleted() {\n        \n    }\n}\n\n// Don`t forget to export your renderer\nexport default DefaultRenderer;","// Import Highway\nimport Highway from '@dogstudio/highway';\n\nclass DefaultTransition extends Highway.Transition {\n    // Built-in methods\n    in({ from, to, trigger, done }) {\n        window.scrollTo(0, 0);\n        from.remove();\n\n        $('.revealer').removeClass('animate-in').addClass('animate-out');\n        setTimeout(() => {\n            $('.revealer').removeClass('animate-out');\n            done();\n        }, 600);\n    }\n\n    out({ from, trigger, done }) {\n        $('.revealer').addClass('animate-in');\n        setTimeout(() => {\n            done();\n        }, 600);\n    }\n}\n\n// Don`t forget to export your transition\nexport default DefaultTransition;","import ScrollMonitor from 'scrollmonitor';\n//import { Foundation } from 'foundation-sites/js/foundation.core';\n// NOTE: Foundation scripts break IE11 and down, so don't use them.\n\nimport NavigationController from './NavigationController';\n//import ContactFormController from './ContactFormController';\n\nclass MainController {\n    // main class initialization - runs once on site load\n    constructor() {\n        // Create class variables\n        this.scrollMonitor = ScrollMonitor;\n        //Foundation.addToJquery($);\n        this.scrollWatchers = [];\n        this.navigationController = null;\n        this.contactFormController = null;\n\n        // hide preloader \n        $('.revealer').removeClass('show').addClass('animate-out');\n        setTimeout(function () {\n            $('.revealer').removeClass('animate-out');\n        }, 600);\n    }\n\n    // initialization - runs each time a new page is loaded\n    init() {\n        try {\n            //$(document).foundation();\n            $('body').addClass('animations-enabled');\n            var _instance = this;\n\n            if (typeof ga === 'function') {\n                ga('send', 'pageview', location.pathname);\n            }\n\n            // initialize navigation controller\n            // this.navigationController = new NavigationController();\n            // this.navigationController.init();\n\n            // run element animations when in viewport (adds .is-active to visible elements as you scroll)\n            $('.animatable').each(function (index) {\n                // create two watchers - one with an offset for enter events, and one without an offset for exit events\n                // lets us add visibility classes with an offset, and remove them when the element is completely outside the visible viewport\n                let enterScrollWatcher = scrollMonitor.create($(this).get(0), -100);\n                let exitScrollWatcher = scrollMonitor.create($(this).get(0), 100);\n                _instance.scrollWatchers.push(enterScrollWatcher);\n                _instance.scrollWatchers.push(exitScrollWatcher);\n\n\n                enterScrollWatcher.enterViewport(function () {\n                    $(this.watchItem).addClass('is-active');\n                });\n\n                exitScrollWatcher.exitViewport(function () {\n                    $(this.watchItem).removeClass('is-active');\n                });\n\n                // If any of the elements are visible, add the active class (after an initial delay, to facilitate page transition animation)\n                $(this).addClass('will-animate');\n                $(this).removeClass('is-active');\n\n                if (exitScrollWatcher.isInViewport) {\n                    setTimeout(() => {\n                        $(exitScrollWatcher.watchItem).addClass('is-active');\n                    }, 50);\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // Runs every time a new page replaces the current one\n    // Destroys all scripts on the page, so they can be reinitialized on the new one\n    destroy() {\n        try {\n            // destroy navigation controller\n            // this.navigationController.destroy();\n            // this.navigationController = null;\n\n            // destroy element animation scroll watchers \n            for (let i = 0; i < this.scrollWatchers.length; i++) {\n                this.scrollWatchers[i].destroy();\n            }\n\n            this.scrollWatchers = [];\n            //$(document).foundation('destroy');\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n\nexport default MainController;","class NavigationController {\n    constructor() {\n        this.navigationContainer = null;\n        this.mobileNavToggle = null;\n        this.scrollTimeout = null;\n\n        this.tolerance = 5; // the amount scrolled in one event before triggering pinning, used to stop flickering navbar on smooth scroll\n        this.pinnedOffset = 50; // vertical offset in px before element is first unpinned\n        this.topClass = 'is-top'; // class added to element when above offset\n        this.notTopClass = 'is-not-top'; // class added to element when below offset\n        this.pinnedClass = 'is-pinned'; // class added to element when pinned\n        this.unpinnedClass = 'is-unpinned'; // class added to element when unpinned\n        this.frozen = false; // freezes pin and unpin class changes\n\n        this.isMobileNavOpen = false;\n        this.lastKnownScrollY = 0; // holds last known scroll position, used for pinning or unpinning the element\n    }\n\n    init() {\n        // this.navigationContainer = $('.main-nav-container');\n        // this.mobileNavToggle = $('button.mobile-nav-toggle', this.navigationContainer);\n\n        // $(window).on('scroll.bws-navigation-controller', (event) => this.onScroll(event));\n        // this.mobileNavToggle.on('click.bws-navigation-controller', (event) => this.toggleMobileNav(event));\n\n        // this.onScroll(null); // trigger event once to add initial classes\n    }\n\n    onScroll(event) {\n        // If there's a scroll timer already existing, cancel it\n        if (this.scrollTimeout) {\n            window.cancelAnimationFrame(this.scrollTimeout);\n        }\n\n        // Setup the new requestAnimationFrame\n        this.scrollTimeout = window.requestAnimationFrame(() => {\n            let currentScrollY = $(document).scrollTop();\n            let scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up';\n\n            // set top or not top based on current scroll position and offset\n            if (currentScrollY >= this.pinnedOffset) {\n                this.setNotTop();\n            } else {\n                this.setTop();\n            }\n\n            // set pinned or not based on distance scrolled and direction\n            if (scrollDirection === 'down' && currentScrollY >= this.lastKnownScrollY && Math.abs(currentScrollY - this.lastKnownScrollY) >= this.tolerance) {\n                this.setUnpinned();\n            } else if (scrollDirection === 'up' && currentScrollY <= this.lastKnownScrollY && Math.abs(currentScrollY - this.lastKnownScrollY) >= this.tolerance) {\n                this.setPinned();\n            }\n\n            this.lastKnownScrollY = currentScrollY;\n        });\n    }\n\n    toggleMobileNav(event) {\n        if (this.isMobileNavOpen) {\n            // this.mobileNavToggle.removeClass('is-active');\n            // $('.page-wrapper').removeClass('mobile-nav-active');\n            // $('ul.menu', this.navigationContainer).removeClass('is-active');\n\n            // $('ul.menu .menu-item a', this.navigationContainer).off('click.bws-navigation-controller');\n            // this.frozen = false;\n        } else {\n            // this.mobileNavToggle.addClass('is-active');\n            // $('.page-wrapper').addClass('mobile-nav-active');\n            // $('ul.menu', this.navigationContainer).addClass('is-active');\n\n            // $('ul.menu .menu-item a', this.navigationContainer).on('click.bws-navigation-controller', (event) => this.toggleMobileNav(event));\n            // this.frozen = true;\n        }\n\n        this.isMobileNavOpen = !this.isMobileNavOpen;\n    }\n\n    freezePinning() {\n        this.frozen = true;\n    }\n\n    unfreezePinning() {\n        this.frozen = false;\n    }\n\n    setTop() {\n        if (this.navigationContainer.hasClass(this.notTopClass)) {\n            this.navigationContainer.removeClass(this.notTopClass);\n        }\n\n        if (!this.navigationContainer.hasClass(this.topClass)) {\n            this.navigationContainer.addClass(this.topClass);\n        }\n    }\n\n    setNotTop() {\n        if (this.navigationContainer.hasClass(this.topClass)) {\n            this.navigationContainer.removeClass(this.topClass);\n        }\n\n        if (!this.navigationContainer.hasClass(this.notTopClass)) {\n            this.navigationContainer.addClass(this.notTopClass);\n        }\n    }\n\n    setPinned() {\n        if (!this.frozen) {\n            if (this.navigationContainer.hasClass(this.unpinnedClass)) {\n                this.navigationContainer.removeClass(this.unpinnedClass);\n            }\n\n            if (!this.navigationContainer.hasClass(this.pinnedClass)) {\n                this.navigationContainer.addClass(this.pinnedClass);\n            }\n        }\n    }\n\n    setUnpinned() {\n        if (!this.frozen) {\n            if (this.navigationContainer.hasClass(this.pinnedClass)) {\n                this.navigationContainer.removeClass(this.pinnedClass);\n            }\n\n            if (!this.navigationContainer.hasClass(this.unpinnedClass)) {\n                this.navigationContainer.addClass(this.unpinnedClass);\n            }\n        }\n    }\n\n    destroy() {\n        window.removeEventListener('scroll', this.onScroll);\n        this.mobileNavToggle.off('click.bws-navigation-controller');\n        //$('ul.menu .menu-item a', this.navigationContainer).off('click.bws-navigation-controller');\n\n        this.mobileNavToggle = null;\n        this.scrollTimeout = null;\n        this.navigationContainer = null;\n        this.lastKnownScrollY = 0;\n    }\n}\n\nexport default NavigationController;","import { LazySizes } from 'lazysizes';\r\nimport 'lazysizes/plugins/respimg/ls.respimg';\r\n\r\nimport Highway from '@dogstudio/highway';\r\nimport DefaultRenderer from './DefaultRenderer';\r\nimport DefaultTransition from './DefaultTransition';\r\nimport MainController from './MainController';\r\n\r\n$(() => {\r\n    const H = new Highway.Core({\r\n        renderers: {\r\n            common: DefaultRenderer\r\n        },\r\n        transitions: {\r\n            common: DefaultTransition,\r\n            default: DefaultTransition\r\n        }\r\n    })\r\n});","// extracted by mini-css-extract-plugin"],"mappingsvJA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAeA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAoBA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AAEA;AAEA;AAEA;AAKA;AAOA;AAGA;AAQA;AACA;AAEA;AACA;AAEA;AACA;AAeA;AAeA;AACA;AAGA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;ACvFA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAIA;AAKA;AAKA;AAOA;AAaA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA8DA;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}