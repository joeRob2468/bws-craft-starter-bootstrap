{% css formCss %}

{{ form.renderTag({ formAttributes: {}, class: "freeform-form" }) }}

<script>
    var form = document.querySelector('[data-id=" {{ form.anchor }}"]');
    if (form) {
        form.addEventListener("freeform-ready", function (event) {
            var freeform = event.target.freeform;

            freeform.setOption("errorClassBanner", ["callout", "alert", "form-errors"]);
            freeform.setOption("errorClassList", ["form-error", "is-visible"]);
            freeform.setOption("errorClassField", "is-invalid-input");
            freeform.setOption("successClassBanner", ["callout", "success"]);
        })

        form.addEventListener("freeform-stripe-styling", function (event) {
            event.detail.base = {
                fontSize: "16px",
                fontFamily: "-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\""
            }
        })
    }
</script>

{% if form.pages|length > 1 %}
    <ul class="menu">
        {% for page in form.pages %}
            <li class="menu-text{{ form.currentPage.index == page.index ? ' is-active' : '' }}">
                {{ page.label }}
            </li>
        {% endfor %}
    </ul>
    <br/>
{% endif %}

{% if form.hasErrors %}
    <div class="callout alert">
        {{ "Error! Please review the form and try submitting again."|t('freeform') }}

        {% if form.errors|length %}
            <ul>
                {% for error in form.errors %}
                    <li>{{ error }}</li>
                {% endfor %}
            </ul>
        {% endif %}
    </div>
{% endif %}

<div class="grid-container">
    {% for row in form %}
        <div class="grid-x grid-margin-x {{ form.customAttributes.rowClass }}">
            {% for field in row %}
                {% set width = (12 / (row|length)) %}

                {% set isCheckbox = field.type in ["checkbox","mailing_list"] %}

                {% set columnClass = "" %}
                {% set columnClass = columnClass ~ form.customAttributes.columnClass %}
                {% set columnClass = columnClass ~ " medium-" ~ width %}

                {% if field.type == "submit" %}
                    {% set columnClass = columnClass ~ " submit submit-align-" ~ field.position %}
                {% endif %}

                <div class="{{ columnClass }} cell" {{ field.rulesHtmlData }}>
                    <div class="field-container{% if isCheckbox %}checkbox-container{% endif %}">
                        {% if field.type == "checkbox_group" %}

                            {{ field.renderLabel({
                                    labelClass: (field.required ? " required" : ""),
                                    instructionsClass: "help-text",
                                }) }}
                            <div class="checkbox-group-container">
                            {% for index, option in field.options %}
                            <div class="checkbox">
                                <div class="checkbox-input">
                                    <input type="checkbox" name="{{ field.handle }}[]" value="{{ option.value }}" id="{{ field.idAttribute }}-{{ index }}" {{ option.checked ? "checked" : "" }}/>
                                    <span class="custom-checkbox"></span>
                                </div>
                                <label for="{{ field.idAttribute }}-{{ index }}">{{ option.label|t|raw }}</label>

                            </div>
                            {% endfor %}
                            </div>

                            {{ field.renderInstructions() }}
                            {{ field.renderErrors() }}

                        {% elseif field.type == "radio_group" %}

                            {{ field.renderLabel({
                        labelClass: (field.required ? " required" : ""),
                        instructionsClass: "help-text",
                    }) }}
                        <div class="radio-group-container">
                            {% for index, option in field.options %}
                                {{ not field.oneLine ? '<div class="radio">'|raw }}

                                <input type="radio" name="{{ field.handle }}" value="{{ option.value }}" id="{{ field.idAttribute }}-{{ index }}" {{ option.checked ? "checked" : "" }}/>
                                <label for="{{ field.idAttribute }}-{{ index }}">{{ option.label|t|raw }}</label>

                                {{ not field.oneLine ? '</div>'|raw }}
                            {% endfor %}
                        </div>

                            {{ field.renderInstructions() }}
                            {{ field.renderErrors() }}

                        {% elseif field.type == "dynamic_recipients" and (field.showAsRadio or field.showAsCheckboxes) %}

                            {{ field.renderLabel({
                        labelClass: (field.required ? " required" : ""),
                        instructionsClass: "help-text",
                    }) }}

                            {% for index, option in field.options %}
                                {{ not field.oneLine ? '<div class="radio">'|raw }}

                                <input type="{{ field.showAsRadio ? "radio" : "checkbox" }}" name="{{ field.handle }}[]" value="{{ loop.index0 }}" id="{{ field.idAttribute }}-{{ index }}" {{ option.checked ? "checked" : "" }}/>
                                <label for="{{ field.idAttribute }}-{{ index }}">{{ option.label|t|raw }}</label>

                                {{ not field.oneLine ? '</div>'|raw }}
                            {% endfor %}

                            {{ field.renderInstructions() }}
                            {{ field.renderErrors() }}

                        {% elseif field.type == "cc_details" %}

                            {# FOR FREEFORM PAYMENTS #}

                            {{ field.renderLabel({
                        labelClass: (field.required ? " required" : ""),
                        instructionsClass: "help-text",
                    }) }}

                            {% for layoutRow in field.layoutRows %}
                                <div class="grid-x grid-margin-x {{ form.customAttributes.rowClass }}">
                                    {% set layoutWidth = (12 / (layoutRow|length)) %}
                                    {% set columnClass = columnClass|replace('medium-3')|replace('medium-4')|replace('medium-6')|replace('medium-12') %}
                                    {% set columnClass = columnClass ~ " medium-" ~ layoutWidth %}
                                    {% for layoutField in layoutRow %}
                                        <div class="{{ columnClass }} cell">
                                            {{ layoutField.renderLabel({
                                        labelClass: (layoutField.required ? " required" : ""),
                                        instructionsClass: "help-text",
                                    }) }}

                                            {{ layoutField.renderInput({
                                        instructionsClass: "help-block",
                                        instructionsBelowField: true,
                                        labelClass: (layoutField.required ? " required" : ""),
                                        errorClass: "help-block",
                                        inputAttributes: {type: "text"},
                                        useRequiredAttribute: true,
                                    }) }}

                                            {{ layoutField.renderInstructions() }}
                                            {{ layoutField.renderErrors() }}
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endfor %}

                            {{ field.renderInput({
                        instructionsClass: "help-block",
                        instructionsBelowField: true,
                        labelClass: (field.required ? " required" : ""),
                        errorClass: "help-block",
                        useRequiredAttribute: true,
                    }) }}

                            {{ field.renderInstructions() }}
                            {{ field.renderErrors() }}

                        {% elseif field.type == "signature" %}

                            {{ field.render({ class: "button" }) }}

                        {% elseif field.type == "table" %}

                            {{ field.render({
                        class: "table",
                        labelClass: (field.required ? " required" : ""),
                        instructionsClass: "help-block",
                        instructionsBelowField: true,
                        errorClass: "help-block",
                        addButtonLabel: "Add +",
                        addButtonClass: "button",
                        removeButtonLabel: "x",
                        removeButtonClass: "button",
                        tableTextInputClass: "",
                        tableSelectInputClass: "",
                        tableCheckboxInputClass: "",
                        useRequiredAttribute: true,
                    }) }}

                        {% elseif field.type == "submit" %}

                            {{ field.render({ class: "button" }) }}

                        {% else %}

                            {{ field.render({
                                class: isCheckbox ? "checkbox" : "form-control",
                                instructionsClass: "help-text",
                                instructionsBelowField: true,
                                useRequiredAttribute: true,
                                labelClass: (field.required ? " required" : ""),
                            }) }}

                        {% endif %}
                    </div>
                </div>
            {% endfor %}
        </div>
    {% endfor %}
</div>

<div class="success-message hidden">
    <p>Form successfully submitted!</p>
</div>

<div class="error-message hidden">
    <p>Some of your information is invalid. Please correct the following issues: </p>
    <div class="error-information">
    </div>
</div>

{{ form.renderClosingTag }}
